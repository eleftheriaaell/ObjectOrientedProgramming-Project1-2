---------------------------------------------------------------------------------
Ελευθερία Έλληνα
ΑΜ: 1115201800228
---------------------------------------------------------------------------------
~Άσκηση 2
---------------------------------------------------------------------------------
Εντολή μεταγλώττισης:
	g++ main.cc post.cc post_array.cc thread.cc thread_array.cc forum.cc tree.cc
---------------------------------------------------------------------------------
Επιλογή private/public μεταβλητών/συναρτήσεων: Σε όλες τις κλάσεις, οι private 
μεταβλητές/συναρτήσεις έχουν επιλεχθεί έτσι ώστε να μην είναι προσβάσιμες από 
τον χρήστη. Όλες οι public μεταβλητές/συναρτήσεις έχουν δηλωθεί έτσι ώστε να γίνει
σωστή χρήση των private μεταβλητών/συναρτήσεων. 
----------------------------------------------------------------------------------
ΣΥΝΑΡΤΗΣΕΙΣ:
----------------------------------------------------------------------------------
ΑΡΧΕΙΟ main.cc:

Δημιουργεί το αντικείμενο "Αντικειμενοστραφής Προγραμματισμός" τύπου forum. Καλεί τη 
συνάρτηση print_sorted, η οποία αποτελεί συνάρτηση του αρχείου forum.cc.

-----------------------------------------------------------------------------------
ΑΡΧΕΙΟ forum.cc:

Cοnstructor(string ft): Δημιουργεί τον πίνακα των threads και των trees (πίνακας δεικτών 
			σε δέντρα για την μη άμεση κλήση του tree constructor), αφού πρώτα 
			υπολογίσει το πλήθος τους. Αρχικοποιεί επίσης τoν τίτλο του forum, μέσω του 
			ορίσματος ft και τυπώνει το απαιτούμενο μήνυμα.

Destructor(): Τυπώνει το απαιτούμενο μήνυμα και διαγράφει τον πίνακα των threads και των trees.

print_sorted(): Δεσμεύει χώρο για το τελικό δέντρο. Επίσης, δημιουργεί τα δέντρα του πίνακα 
		των trees και επαυξάνει το τελικό δέντρο με αυτά, μέσω της συνάρτησης traversal του 
		αρχείου tree.cc. Στη συνέχεια τυπώνει το τελικό δέντρο μέσω της συνάρτησης 
		print_tree του αρχείου tree.cc. Τέλος, διαγράφει τα δέντρα του πίνακα των trees 
		όπως και το τελικό δέντρο.

----------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ tree.cc:

Constructor(thread &thr): Ελέγχει αρχικά αν υπάρχουν posts μέσα στο thread, και αν υπάρχουν, 
			  δημιουργεί δέντρο με πλήθος κόμβων ίσο με το πλήθος των posts.

Constructor(): Υπάρχει απλά για την δέσμευση χώρου για αντικείμενο τύπου tree.

Constructor(tree* T): Αντιγράφει υπάρχον post σε άλλο post, για την χρήση του στη συγχώνευση 
		      δέντρων.

Destructor(): Καλεί την συνάρτηση deallocate (θα γίνει επεξήγηση παρακάτω).

create_tree(string s, thread &thr): Ελέγχει αν υπάρχει ο δημιουργός που παίρνει σαν όρισμα, 
				    και ανάλογα με την ύπαρξή του και τη θέση του, τοποθετείται
				    στο κατάλληλο σημείο του δέντρου. Κατά την τοποθέτησή του γίνεται
				    δημιουργία των posts του.

traversal(): Ταξιδεύει μέσα στο δέντρο και απομονώνει τους κόμβους του, για την ευκολότερη σύνδεσή
	     τους μέ το τελικό δέντρο. Αυτό γίνεται με τη κλήση της συνάρτησης merge (θα γίνει 
	     επεξήγηση παρακάτω).

merge(): Ελέγχει αν υπάρχει ο δημιουργός που παίρνει σαν όρισμα, και ανάλογα με την ύπαρξή του
	 τοποθετείται στο κατάλληλο σημείο του δέντρου. Κατά την τοποθέτησή του, αν ο δημιουργός 
	 υπάρχει ήδη γίνεται μόνο συγχώνευση των posts του με αυτά του αντίστοιχου δημιουργού που
	 βρίσκεται στο δέντρο.

deallocate(): Αποδεσμεύει όλη την μνήμη του δέντρου και των posts του, αναδρομικά μέσω της εντολής
	      delete, η οποία καλεί ξανά τον destructor και κατ' επέκταση την deallocate.

print_tree(): Τυπώνει το δέντρο και όλα τα posts του.

-------------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ thread.cc:

Constructor(): Αρχικοποιεί τον πίνακα των posts, αφού πρώτα υπολογίσει το πλήθος τους.
	       Είναι υλοποιημένος έτσι ώστε την πρώτη φορά που θα κληθεί να καλέσει τη
	       συνάρτηση choose_tt, ενώ τις υπόλοιπες φορές καλέι τη συνάρτηση choose_t
	       (η διαφορά τους θα επεξηγηθεί παρακάτω). Σε όλες τις κλήσεις του καλείται 
	       η t_date η οποία αρχικοποιεί την ημερομηνία. Τέλος τυπώνει το απαιτούμενο
	       μήνυμα και καλεί την tprint.

Destructor(): Τυπώνει το απαιτούμενο μήνυμα και διαγράφει τον πίνακα των posts.

choose_tt(): Αρχικοποιεί το thread ¨Κανόνες και Χρήσιμες Πληροφορίες¨ το οποίο πρέπει να υπάρχει
	     σίγουρα στο forum. Θέτει σε αυτό θέμα και δημιουργό.  

choose_t(): Δημιουργεί πίνακα θέματος και δημιουργού thread μέσω των συναρτήσεων createt
             και t_create (του αρχείου thread_array.cc) αντίστοιχα. Στη συνέχεια θέτει μέσω 
	     των πινάκων, θέμα και δημιουργό στο thread.

t_date(): Θέτει τιμές σε μέρα, μήνα και χρόνο μέσω του struct date μέσω του αρχείου date.h.

tprint(): Τυπώνει τα στοιχεία του thread.

counter(): Επιστρέφει το πλήθος των posts. Καλείται από τον constructor του αρχείου tree.cc.

c_list(): Καλεί την συνάρτηση name του αρχείου post.cc, έτσι ώστε να επιστραφεί ο τίτλος του post.

repost(): Επιστρέφει ολόκληρο το post του thread (στοιχείο του πίνακα P).

--------------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ post.cc:

Constructor(): Καλεί τις συναρτήσεις random, p_date και print (θα γίνει επεξήγηση αυτών παρακάτω)
	       για την αρχικοποίηση των στοιχείων του post.

Constructor(post &P): Καλεί τη συνάρτηση copy (θα γίνει επεξήγηση παρακάτω).

Constructor(post *P): Αντιγράφει τα στοιχεία ενός υπάρχον post μέσα σε άλλο post για την συγχώνευση
		      της λίστας κόμβου του τελικού δέντρου.

Destructor(): Τυπώνει το απαιτούμενο μήνυμα.

random(): Δημιουργεί πίνακα τίτλου, δημιουργού και κειμένου του post μέσω των συναρτήσεων create
	  cr_create, txt (του αρχείου post_array.cc) αντίστοιχα. Στη συνέχεια θέτει μέσω των πινάκων,
	  τίτλο, δημιουργό και κείμενο στο post. Γίνεται στατική δήλωση της μεταβλητής i ώστε όταν
	  ανατίθεται στο ID, αυτό να είναι μοναδικό.

p_date(): Θέτει τιμές σε μέρα, μήνα και χρόνο μέσω του struct date μέσω του αρχείου date.h.

name(): Επιστρέφει τον δημιουργό του post. Καλείται από την συνάρτηση c_list του αρχείου 
	thread.cc.

copy(post &P):	Αντιγράφει το ήδη υπάρχον post μέσα σε άλλο post το οποίο χρησιμεύει στην δημιουργία
	        post μέσα σε δέντρο. Καλείται από τον constructor(post &P) του post.

p_name(): Τυπώνει τον τίτλο και το ID του post. Καλείται από την συνάρτηση print_tree του αρχείου 
	  tree.cc.

Οι τίτλοι των posts για κάθε δημιουργό είναι ίδιοι, για την ευκολότερη επαλήθευση σωστού αποτελέσματος.
Τα ID όμως είναι διαφορετικά.

------------------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ thread_array.cc:

createt(string Thread[]): Αναθέτει τιμές στον πίνακα Thread, ο οποίος έχει τα τυχαία θέματα των thread.

t_create(string Creator[]): Αναθέτει τιμές στον πίνακα Creatοr, ο οποίος έχει τους τυχαίους δημιουργούς
			    των thread.

Οι συναρτήσεις αυτές καλούνται από την συνάρτηση choose_t του αρχείου thread.cc.

--------------------------------------------------------------------------------------------------------
AΡΧΕΙΟ post_array.cc:

create(string Post[]): Αναθέτει τιμές στον πίνακα Post, ο οποίος έχει τους τυχαίους τίτλους των
		       post.

cr_create(string Creator[]): Αναθέτει τιμές στον πίνακα Creatοr, ο οποίος έχει τους τυχαίους δημιουργούς
			     των post.

txt(string Text[]): Αναθέτει τιμές στον πίνακα Text, ο οποίος έχει τα τυχαία κείμενα των post.

Οι συναρτήσεις αυτές καλούνται από την συνάρτηση random του αρχείου post.cc.

----------------------------------------------------------------------------------------------------------